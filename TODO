* documenteren
* port smart contracts
* source release
* setup.py: detect which depends/ are available, also allow to use exes, even .exe windows...
  also: put in version
  
* clean up swig stuff
* qaptools: get rid of output "*** block" ...

* Energy-saving
   - has a small effect on performance, but not that much: cf
       examples meilof$ time python3 manysquares.py 100000 0
       examples meilof$ time python3 manysquares.py 100000 100
   - remove it? produces counter-intuitive results...
   - or check why it does not help that much
* dealing with huge values, e.g., compute 2^10000 gives segfault
  time python3 exp.py 2 10000
* TypeError instead of ValueError?
* remove gtest 
* solve double dependency thing?
    * libsnark ../xbyak, ../ate-pairing laten gebruiken? libqap met cmake?
        http://mingw-w64.org/doku.php/download
* does making a source distribution work?
* windows cross-compiling?
* benchmarking: @guarded_and_unguarded
   - multivariate regression as recursive linear regression, BenchmarkResult
     with __add__, __mul__, __sub__
* libsnark: automatically load key given by hash?
* bounds
   - Var(bound=...) -> check and put bound in verification key file
   - verbose option: per computed variable, print computed bounds
     (__file__:__line: "x" has bound [0,20])
   - need to override base type (for bounds) and probably also backend?
* secret santa:
   - amazon lambda, snarkjs
   - assert hashes unequal to each other
* make inhibit_profiling configurable
* rename / operator because it's too dangerous
* check where .value is used: can we avoid all use outside of runtime?

* jupyter, mybinder.org, https://aws.amazon.com/getting-started/projects/build-serverless-web-app-lambda-apigateway-s3-dynamodb-cognito/